# Define la etiqueta que activa el trigger.
# trigger:
#   tags:
#     - release-user 

steps:
  # Build and push the Event Management Commands service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '--platform', 'linux/amd64', '-t', 'gcr.io/$PROJECT_ID/event-management-commands:$SHORT_SHA', '.']
    dir: 'backend/core_functionalities/event_management_commands'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/event-management-commands:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker run --rm gcr.io/$PROJECT_ID/event-management-commands:latest python -m unittest discover -s tests

  # Build and push the Event Management Queries service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '--platform', 'linux/amd64', '-t', 'gcr.io/$PROJECT_ID/event-management-queries:$SHORT_SHA', '.']
    dir: 'backend/core_functionalities/event_management_queries'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/event-management-queries:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker run --rm gcr.io/$PROJECT_ID/event-management-queries:latest python -m unittest discover -s tests

  # Build and push the Service Management service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '--platform', 'linux/amd64', '-t', 'gcr.io/$PROJECT_ID/service-management:$SHORT_SHA', '.']
    dir: 'backend/core_functionalities/service_management'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/service-management:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker run --rm gcr.io/$PROJECT_ID/service-management:latest python -m unittest discover -s tests


  # Build and push the Training Management Commands service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '--platform', 'linux/amd64', '-t', 'gcr.io/$PROJECT_ID/training-management-commands:$SHORT_SHA', '.']
    dir: 'backend/core_functionalities/training_management_commands'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/training-management-commands:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker run --rm gcr.io/$PROJECT_ID/training-management-commands:latest python -m unittest discover -s tests

  # Build and push the Training Management Queries service
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '--platform', 'linux/amd64', '-t', 'gcr.io/$PROJECT_ID/training-management-queries:$SHORT_SHA', '.']
    dir: 'backend/core_functionalities/training_management_queries'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/training-management-queries:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker run --rm gcr.io/$PROJECT_ID/training-management-queries:latest python -m unittest discover -s tests

  # Apply Kubernetes configurations for services and deployments
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/base/']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_COMPUTE_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}'

  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/migrations/training-management-commands-job.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER}'

  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/migrations/training-management-queries-job.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER}'

  # Apply the Ingress configuration
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'ingress.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_COMPUTE_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}'
  
substitutions:
  _CLUSTER_NAME: 'autopilot-cluster-1'
  _COMPUTE_ZONE: 'us-central1'